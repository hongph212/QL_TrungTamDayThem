#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLTrungTamDayHoc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_TT")]
	public partial class QL_TrungTamDayHocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIENLAI(BIENLAI instance);
    partial void UpdateBIENLAI(BIENLAI instance);
    partial void DeleteBIENLAI(BIENLAI instance);
    partial void InsertTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void UpdateTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void DeleteTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void InsertBUOIHOC(BUOIHOC instance);
    partial void UpdateBUOIHOC(BUOIHOC instance);
    partial void DeleteBUOIHOC(BUOIHOC instance);
    partial void InsertCAHOC(CAHOC instance);
    partial void UpdateCAHOC(CAHOC instance);
    partial void DeleteCAHOC(CAHOC instance);
    partial void InsertCHAMCONG(CHAMCONG instance);
    partial void UpdateCHAMCONG(CHAMCONG instance);
    partial void DeleteCHAMCONG(CHAMCONG instance);
    partial void InsertCTPHIEUDK(CTPHIEUDK instance);
    partial void UpdateCTPHIEUDK(CTPHIEUDK instance);
    partial void DeleteCTPHIEUDK(CTPHIEUDK instance);
    partial void InsertDIEMDANH(DIEMDANH instance);
    partial void UpdateDIEMDANH(DIEMDANH instance);
    partial void DeleteDIEMDANH(DIEMDANH instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertHOCVIEN(HOCVIEN instance);
    partial void UpdateHOCVIEN(HOCVIEN instance);
    partial void DeleteHOCVIEN(HOCVIEN instance);
    partial void InsertKHOI(KHOI instance);
    partial void UpdateKHOI(KHOI instance);
    partial void DeleteKHOI(KHOI instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHIEUDK(PHIEUDK instance);
    partial void UpdatePHIEUDK(PHIEUDK instance);
    partial void DeletePHIEUDK(PHIEUDK instance);
    partial void InsertPHIEULUONG(PHIEULUONG instance);
    partial void UpdatePHIEULUONG(PHIEULUONG instance);
    partial void DeletePHIEULUONG(PHIEULUONG instance);
    partial void InsertPHONGHOC(PHONGHOC instance);
    partial void UpdatePHONGHOC(PHONGHOC instance);
    partial void DeletePHONGHOC(PHONGHOC instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public QL_TrungTamDayHocDataContext() : 
				base(global::QLTrungTamDayHoc.Properties.Settings.Default.QL_TTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_TrungTamDayHocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_TrungTamDayHocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_TrungTamDayHocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_TrungTamDayHocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIENLAI> BIENLAIs
		{
			get
			{
				return this.GetTable<BIENLAI>();
			}
		}
		
		public System.Data.Linq.Table<THOIKHOABIEU> THOIKHOABIEUs
		{
			get
			{
				return this.GetTable<THOIKHOABIEU>();
			}
		}
		
		public System.Data.Linq.Table<BUOIHOC> BUOIHOCs
		{
			get
			{
				return this.GetTable<BUOIHOC>();
			}
		}
		
		public System.Data.Linq.Table<CAHOC> CAHOCs
		{
			get
			{
				return this.GetTable<CAHOC>();
			}
		}
		
		public System.Data.Linq.Table<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this.GetTable<CHAMCONG>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUDK> CTPHIEUDKs
		{
			get
			{
				return this.GetTable<CTPHIEUDK>();
			}
		}
		
		public System.Data.Linq.Table<DIEMDANH> DIEMDANHs
		{
			get
			{
				return this.GetTable<DIEMDANH>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHOI> KHOIs
		{
			get
			{
				return this.GetTable<KHOI>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDK> PHIEUDKs
		{
			get
			{
				return this.GetTable<PHIEUDK>();
			}
		}
		
		public System.Data.Linq.Table<PHIEULUONG> PHIEULUONGs
		{
			get
			{
				return this.GetTable<PHIEULUONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGHOC> PHONGHOCs
		{
			get
			{
				return this.GetTable<PHONGHOC>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIENLAI")]
	public partial class BIENLAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBienLai;
		
		private System.Nullable<System.DateTime> _NgayDong;
		
		private System.Nullable<double> _SoTien;
		
		private System.Nullable<int> _Thang;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<int> _MaHV;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBienLaiChanging(int value);
    partial void OnMaBienLaiChanged();
    partial void OnNgayDongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDongChanged();
    partial void OnSoTienChanging(System.Nullable<double> value);
    partial void OnSoTienChanged();
    partial void OnThangChanging(System.Nullable<int> value);
    partial void OnThangChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnMaHVChanging(System.Nullable<int> value);
    partial void OnMaHVChanged();
    #endregion
		
		public BIENLAI()
		{
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBienLai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBienLai
		{
			get
			{
				return this._MaBienLai;
			}
			set
			{
				if ((this._MaBienLai != value))
				{
					this.OnMaBienLaiChanging(value);
					this.SendPropertyChanging();
					this._MaBienLai = value;
					this.SendPropertyChanged("MaBienLai");
					this.OnMaBienLaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDong
		{
			get
			{
				return this._NgayDong;
			}
			set
			{
				if ((this._NgayDong != value))
				{
					this.OnNgayDongChanging(value);
					this.SendPropertyChanging();
					this._NgayDong = value;
					this.SendPropertyChanged("NgayDong");
					this.OnNgayDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Float")]
		public System.Nullable<double> SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int")]
		public System.Nullable<int> Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", DbType="Int")]
		public System.Nullable<int> MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_BIENLAI", Storage="_HOCVIEN", ThisKey="MaHV", OtherKey="MaHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.BIENLAIs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.BIENLAIs.Add(this);
						this._MaHV = value.MaHV;
					}
					else
					{
						this._MaHV = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BIENLAI", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.BIENLAIs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.BIENLAIs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THOIKHOABIEU")]
	public partial class THOIKHOABIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATKB;
		
		private System.Nullable<int> _MaCH;
		
		private System.Nullable<int> _MaBuoi;
		
		private System.Nullable<int> _MaPH;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<BUOIHOC> _BUOIHOC;
		
		private EntityRef<CAHOC> _CAHOC;
		
		private EntityRef<PHONGHOC> _PHONGHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATKBChanging(int value);
    partial void OnMATKBChanged();
    partial void OnMaCHChanging(System.Nullable<int> value);
    partial void OnMaCHChanged();
    partial void OnMaBuoiChanging(System.Nullable<int> value);
    partial void OnMaBuoiChanged();
    partial void OnMaPHChanging(System.Nullable<int> value);
    partial void OnMaPHChanged();
    #endregion
		
		public THOIKHOABIEU()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._BUOIHOC = default(EntityRef<BUOIHOC>);
			this._CAHOC = default(EntityRef<CAHOC>);
			this._PHONGHOC = default(EntityRef<PHONGHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATKB
		{
			get
			{
				return this._MATKB;
			}
			set
			{
				if ((this._MATKB != value))
				{
					this.OnMATKBChanging(value);
					this.SendPropertyChanging();
					this._MATKB = value;
					this.SendPropertyChanged("MATKB");
					this.OnMATKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCH", DbType="Int")]
		public System.Nullable<int> MaCH
		{
			get
			{
				return this._MaCH;
			}
			set
			{
				if ((this._MaCH != value))
				{
					if (this._CAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCHChanging(value);
					this.SendPropertyChanging();
					this._MaCH = value;
					this.SendPropertyChanged("MaCH");
					this.OnMaCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", DbType="Int")]
		public System.Nullable<int> MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					if (this._BUOIHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Int")]
		public System.Nullable<int> MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					if (this._PHONGHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THOIKHOABIEU_PHANCONG", Storage="_PHANCONGs", ThisKey="MATKB", OtherKey="MaTKB")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUOIHOC_THOIKHOABIEU", Storage="_BUOIHOC", ThisKey="MaBuoi", OtherKey="MaBuoi", IsForeignKey=true)]
		public BUOIHOC BUOIHOC
		{
			get
			{
				return this._BUOIHOC.Entity;
			}
			set
			{
				BUOIHOC previousValue = this._BUOIHOC.Entity;
				if (((previousValue != value) 
							|| (this._BUOIHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUOIHOC.Entity = null;
						previousValue.THOIKHOABIEUs.Remove(this);
					}
					this._BUOIHOC.Entity = value;
					if ((value != null))
					{
						value.THOIKHOABIEUs.Add(this);
						this._MaBuoi = value.MaBuoi;
					}
					else
					{
						this._MaBuoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("BUOIHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAHOC_THOIKHOABIEU", Storage="_CAHOC", ThisKey="MaCH", OtherKey="MaCH", IsForeignKey=true)]
		public CAHOC CAHOC
		{
			get
			{
				return this._CAHOC.Entity;
			}
			set
			{
				CAHOC previousValue = this._CAHOC.Entity;
				if (((previousValue != value) 
							|| (this._CAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAHOC.Entity = null;
						previousValue.THOIKHOABIEUs.Remove(this);
					}
					this._CAHOC.Entity = value;
					if ((value != null))
					{
						value.THOIKHOABIEUs.Add(this);
						this._MaCH = value.MaCH;
					}
					else
					{
						this._MaCH = default(Nullable<int>);
					}
					this.SendPropertyChanged("CAHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_THOIKHOABIEU", Storage="_PHONGHOC", ThisKey="MaPH", OtherKey="MaPH", IsForeignKey=true)]
		public PHONGHOC PHONGHOC
		{
			get
			{
				return this._PHONGHOC.Entity;
			}
			set
			{
				PHONGHOC previousValue = this._PHONGHOC.Entity;
				if (((previousValue != value) 
							|| (this._PHONGHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGHOC.Entity = null;
						previousValue.THOIKHOABIEUs.Remove(this);
					}
					this._PHONGHOC.Entity = value;
					if ((value != null))
					{
						value.THOIKHOABIEUs.Add(this);
						this._MaPH = value.MaPH;
					}
					else
					{
						this._MaPH = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHONGHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.THOIKHOABIEU = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.THOIKHOABIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUOIHOC")]
	public partial class BUOIHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBuoi;
		
		private string _TenBuoi;
		
		private EntitySet<THOIKHOABIEU> _THOIKHOABIEUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBuoiChanging(int value);
    partial void OnMaBuoiChanged();
    partial void OnTenBuoiChanging(string value);
    partial void OnTenBuoiChanged();
    #endregion
		
		public BUOIHOC()
		{
			this._THOIKHOABIEUs = new EntitySet<THOIKHOABIEU>(new Action<THOIKHOABIEU>(this.attach_THOIKHOABIEUs), new Action<THOIKHOABIEU>(this.detach_THOIKHOABIEUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBuoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBuoi
		{
			get
			{
				return this._MaBuoi;
			}
			set
			{
				if ((this._MaBuoi != value))
				{
					this.OnMaBuoiChanging(value);
					this.SendPropertyChanging();
					this._MaBuoi = value;
					this.SendPropertyChanged("MaBuoi");
					this.OnMaBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBuoi", DbType="NVarChar(50)")]
		public string TenBuoi
		{
			get
			{
				return this._TenBuoi;
			}
			set
			{
				if ((this._TenBuoi != value))
				{
					this.OnTenBuoiChanging(value);
					this.SendPropertyChanging();
					this._TenBuoi = value;
					this.SendPropertyChanged("TenBuoi");
					this.OnTenBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUOIHOC_THOIKHOABIEU", Storage="_THOIKHOABIEUs", ThisKey="MaBuoi", OtherKey="MaBuoi")]
		public EntitySet<THOIKHOABIEU> THOIKHOABIEUs
		{
			get
			{
				return this._THOIKHOABIEUs;
			}
			set
			{
				this._THOIKHOABIEUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.BUOIHOC = this;
		}
		
		private void detach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.BUOIHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAHOC")]
	public partial class CAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCH;
		
		private System.Nullable<System.TimeSpan> _GioBD;
		
		private System.Nullable<System.TimeSpan> _GioKT;
		
		private string _Thu;
		
		private EntitySet<THOIKHOABIEU> _THOIKHOABIEUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCHChanging(int value);
    partial void OnMaCHChanged();
    partial void OnGioBDChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioBDChanged();
    partial void OnGioKTChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioKTChanged();
    partial void OnThuChanging(string value);
    partial void OnThuChanged();
    #endregion
		
		public CAHOC()
		{
			this._THOIKHOABIEUs = new EntitySet<THOIKHOABIEU>(new Action<THOIKHOABIEU>(this.attach_THOIKHOABIEUs), new Action<THOIKHOABIEU>(this.detach_THOIKHOABIEUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCH
		{
			get
			{
				return this._MaCH;
			}
			set
			{
				if ((this._MaCH != value))
				{
					this.OnMaCHChanging(value);
					this.SendPropertyChanging();
					this._MaCH = value;
					this.SendPropertyChanged("MaCH");
					this.OnMaCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBD", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioBD
		{
			get
			{
				return this._GioBD;
			}
			set
			{
				if ((this._GioBD != value))
				{
					this.OnGioBDChanging(value);
					this.SendPropertyChanging();
					this._GioBD = value;
					this.SendPropertyChanged("GioBD");
					this.OnGioBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKT", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioKT
		{
			get
			{
				return this._GioKT;
			}
			set
			{
				if ((this._GioKT != value))
				{
					this.OnGioKTChanging(value);
					this.SendPropertyChanging();
					this._GioKT = value;
					this.SendPropertyChanged("GioKT");
					this.OnGioKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="NVarChar(50)")]
		public string Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAHOC_THOIKHOABIEU", Storage="_THOIKHOABIEUs", ThisKey="MaCH", OtherKey="MaCH")]
		public EntitySet<THOIKHOABIEU> THOIKHOABIEUs
		{
			get
			{
				return this._THOIKHOABIEUs;
			}
			set
			{
				this._THOIKHOABIEUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.CAHOC = this;
		}
		
		private void detach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.CAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMCONG")]
	public partial class CHAMCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _NgayChamCong;
		
		private System.Nullable<int> _CoPhep;
		
		private System.Nullable<int> _MaPC;
		
		private EntityRef<PHANCONG> _PHANCONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayChamCongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChamCongChanged();
    partial void OnCoPhepChanging(System.Nullable<int> value);
    partial void OnCoPhepChanged();
    partial void OnMaPCChanging(System.Nullable<int> value);
    partial void OnMaPCChanged();
    #endregion
		
		public CHAMCONG()
		{
			this._PHANCONG = default(EntityRef<PHANCONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayChamCong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayChamCong
		{
			get
			{
				return this._NgayChamCong;
			}
			set
			{
				if ((this._NgayChamCong != value))
				{
					this.OnNgayChamCongChanging(value);
					this.SendPropertyChanging();
					this._NgayChamCong = value;
					this.SendPropertyChanged("NgayChamCong");
					this.OnNgayChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoPhep", DbType="Int")]
		public System.Nullable<int> CoPhep
		{
			get
			{
				return this._CoPhep;
			}
			set
			{
				if ((this._CoPhep != value))
				{
					this.OnCoPhepChanging(value);
					this.SendPropertyChanging();
					this._CoPhep = value;
					this.SendPropertyChanged("CoPhep");
					this.OnCoPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPC", DbType="Int")]
		public System.Nullable<int> MaPC
		{
			get
			{
				return this._MaPC;
			}
			set
			{
				if ((this._MaPC != value))
				{
					if (this._PHANCONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPCChanging(value);
					this.SendPropertyChanging();
					this._MaPC = value;
					this.SendPropertyChanged("MaPC");
					this.OnMaPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANCONG_CHAMCONG", Storage="_PHANCONG", ThisKey="MaPC", OtherKey="MaPC", IsForeignKey=true)]
		public PHANCONG PHANCONG
		{
			get
			{
				return this._PHANCONG.Entity;
			}
			set
			{
				PHANCONG previousValue = this._PHANCONG.Entity;
				if (((previousValue != value) 
							|| (this._PHANCONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANCONG.Entity = null;
						previousValue.CHAMCONGs.Remove(this);
					}
					this._PHANCONG.Entity = value;
					if ((value != null))
					{
						value.CHAMCONGs.Add(this);
						this._MaPC = value.MaPC;
					}
					else
					{
						this._MaPC = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHANCONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUDK")]
	public partial class CTPHIEUDK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuDK;
		
		private int _MaLop;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<PHIEUDK> _PHIEUDK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuDKChanging(int value);
    partial void OnMaPhieuDKChanged();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    #endregion
		
		public CTPHIEUDK()
		{
			this._LOP = default(EntityRef<LOP>);
			this._PHIEUDK = default(EntityRef<PHIEUDK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuDK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuDK
		{
			get
			{
				return this._MaPhieuDK;
			}
			set
			{
				if ((this._MaPhieuDK != value))
				{
					if (this._PHIEUDK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuDKChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuDK = value;
					this.SendPropertyChanged("MaPhieuDK");
					this.OnMaPhieuDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_CTPHIEUDK", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.CTPHIEUDKs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDKs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDK_CTPHIEUDK", Storage="_PHIEUDK", ThisKey="MaPhieuDK", OtherKey="MaPhieuDK", IsForeignKey=true)]
		public PHIEUDK PHIEUDK
		{
			get
			{
				return this._PHIEUDK.Entity;
			}
			set
			{
				PHIEUDK previousValue = this._PHIEUDK.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDK.Entity = null;
						previousValue.CTPHIEUDKs.Remove(this);
					}
					this._PHIEUDK.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDKs.Add(this);
						this._MaPhieuDK = value.MaPhieuDK;
					}
					else
					{
						this._MaPhieuDK = default(int);
					}
					this.SendPropertyChanged("PHIEUDK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEMDANH")]
	public partial class DIEMDANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _NgayDiemDanh;
		
		private System.Nullable<int> _CoPhep;
		
		private int _MaHV;
		
		private int _MaLop;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayDiemDanhChanging(System.DateTime value);
    partial void OnNgayDiemDanhChanged();
    partial void OnCoPhepChanging(System.Nullable<int> value);
    partial void OnCoPhepChanged();
    partial void OnMaHVChanging(int value);
    partial void OnMaHVChanged();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    #endregion
		
		public DIEMDANH()
		{
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDiemDanh", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayDiemDanh
		{
			get
			{
				return this._NgayDiemDanh;
			}
			set
			{
				if ((this._NgayDiemDanh != value))
				{
					this.OnNgayDiemDanhChanging(value);
					this.SendPropertyChanging();
					this._NgayDiemDanh = value;
					this.SendPropertyChanged("NgayDiemDanh");
					this.OnNgayDiemDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoPhep", DbType="Int")]
		public System.Nullable<int> CoPhep
		{
			get
			{
				return this._CoPhep;
			}
			set
			{
				if ((this._CoPhep != value))
				{
					this.OnCoPhepChanging(value);
					this.SendPropertyChanging();
					this._CoPhep = value;
					this.SendPropertyChanged("CoPhep");
					this.OnCoPhepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DIEMDANH", Storage="_HOCVIEN", ThisKey="MaHV", OtherKey="MaHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.DIEMDANHs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.DIEMDANHs.Add(this);
						this._MaHV = value.MaHV;
					}
					else
					{
						this._MaHV = default(int);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_DIEMDANH", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.DIEMDANHs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.DIEMDANHs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<double> _HeSL;
		
		private System.Nullable<double> _LuongCB;
		
		private System.Nullable<int> _MaMH;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntitySet<PHIEULUONG> _PHIEULUONGs;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnHeSLChanging(System.Nullable<double> value);
    partial void OnHeSLChanged();
    partial void OnLuongCBChanging(System.Nullable<double> value);
    partial void OnLuongCBChanged();
    partial void OnMaMHChanging(System.Nullable<int> value);
    partial void OnMaMHChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._PHIEULUONGs = new EntitySet<PHIEULUONG>(new Action<PHIEULUONG>(this.attach_PHIEULUONGs), new Action<PHIEULUONG>(this.detach_PHIEULUONGs));
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSL", DbType="Float")]
		public System.Nullable<double> HeSL
		{
			get
			{
				return this._HeSL;
			}
			set
			{
				if ((this._HeSL != value))
				{
					this.OnHeSLChanging(value);
					this.SendPropertyChanging();
					this._HeSL = value;
					this.SendPropertyChanged("HeSL");
					this.OnHeSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCB", DbType="Float")]
		public System.Nullable<double> LuongCB
		{
			get
			{
				return this._LuongCB;
			}
			set
			{
				if ((this._LuongCB != value))
				{
					this.OnLuongCBChanging(value);
					this.SendPropertyChanging();
					this._LuongCB = value;
					this.SendPropertyChanged("LuongCB");
					this.OnLuongCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int")]
		public System.Nullable<int> MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHIEULUONG", Storage="_PHIEULUONGs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<PHIEULUONG> PHIEULUONGs
		{
			get
			{
				return this._PHIEULUONGs;
			}
			set
			{
				this._PHIEULUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIAOVIENs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIAOVIENs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
		
		private void attach_PHIEULUONGs(PHIEULUONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHIEULUONGs(PHIEULUONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHV;
		
		private string _TenHV;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<double> _DiemDauVao;
		
		private EntitySet<BIENLAI> _BIENLAIs;
		
		private EntitySet<DIEMDANH> _DIEMDANHs;
		
		private EntitySet<PHIEUDK> _PHIEUDKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHVChanging(int value);
    partial void OnMaHVChanged();
    partial void OnTenHVChanging(string value);
    partial void OnTenHVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiemDauVaoChanging(System.Nullable<double> value);
    partial void OnDiemDauVaoChanged();
    #endregion
		
		public HOCVIEN()
		{
			this._BIENLAIs = new EntitySet<BIENLAI>(new Action<BIENLAI>(this.attach_BIENLAIs), new Action<BIENLAI>(this.detach_BIENLAIs));
			this._DIEMDANHs = new EntitySet<DIEMDANH>(new Action<DIEMDANH>(this.attach_DIEMDANHs), new Action<DIEMDANH>(this.detach_DIEMDANHs));
			this._PHIEUDKs = new EntitySet<PHIEUDK>(new Action<PHIEUDK>(this.attach_PHIEUDKs), new Action<PHIEUDK>(this.detach_PHIEUDKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHV", DbType="NVarChar(MAX)")]
		public string TenHV
		{
			get
			{
				return this._TenHV;
			}
			set
			{
				if ((this._TenHV != value))
				{
					this.OnTenHVChanging(value);
					this.SendPropertyChanging();
					this._TenHV = value;
					this.SendPropertyChanged("TenHV");
					this.OnTenHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDauVao", DbType="Float")]
		public System.Nullable<double> DiemDauVao
		{
			get
			{
				return this._DiemDauVao;
			}
			set
			{
				if ((this._DiemDauVao != value))
				{
					this.OnDiemDauVaoChanging(value);
					this.SendPropertyChanging();
					this._DiemDauVao = value;
					this.SendPropertyChanged("DiemDauVao");
					this.OnDiemDauVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_BIENLAI", Storage="_BIENLAIs", ThisKey="MaHV", OtherKey="MaHV")]
		public EntitySet<BIENLAI> BIENLAIs
		{
			get
			{
				return this._BIENLAIs;
			}
			set
			{
				this._BIENLAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_DIEMDANH", Storage="_DIEMDANHs", ThisKey="MaHV", OtherKey="MaHV")]
		public EntitySet<DIEMDANH> DIEMDANHs
		{
			get
			{
				return this._DIEMDANHs;
			}
			set
			{
				this._DIEMDANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_PHIEUDK", Storage="_PHIEUDKs", ThisKey="MaHV", OtherKey="MaHV")]
		public EntitySet<PHIEUDK> PHIEUDKs
		{
			get
			{
				return this._PHIEUDKs;
			}
			set
			{
				this._PHIEUDKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
		
		private void attach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
		
		private void attach_PHIEUDKs(PHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_PHIEUDKs(PHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOI")]
	public partial class KHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoi;
		
		private string _TenKhoi;
		
		private System.Nullable<double> _HocPhi;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    partial void OnHocPhiChanging(System.Nullable<double> value);
    partial void OnHocPhiChanged();
    #endregion
		
		public KHOI()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(50)")]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocPhi", DbType="Float")]
		public System.Nullable<double> HocPhi
		{
			get
			{
				return this._HocPhi;
			}
			set
			{
				if ((this._HocPhi != value))
				{
					this.OnHocPhiChanging(value);
					this.SendPropertyChanging();
					this._HocPhi = value;
					this.SendPropertyChanged("HocPhi");
					this.OnHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOI_LOP", Storage="_LOPs", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOI = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private string _TenLop;
		
		private System.Nullable<int> _SiSo;
		
		private System.Nullable<int> _MaKhoi;
		
		private System.Nullable<int> _MaMH;
		
		private EntitySet<CTPHIEUDK> _CTPHIEUDKs;
		
		private EntitySet<DIEMDANH> _DIEMDANHs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<KHOI> _KHOI;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnSiSoChanging(System.Nullable<int> value);
    partial void OnSiSoChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    partial void OnMaMHChanging(System.Nullable<int> value);
    partial void OnMaMHChanged();
    #endregion
		
		public LOP()
		{
			this._CTPHIEUDKs = new EntitySet<CTPHIEUDK>(new Action<CTPHIEUDK>(this.attach_CTPHIEUDKs), new Action<CTPHIEUDK>(this.detach_CTPHIEUDKs));
			this._DIEMDANHs = new EntitySet<DIEMDANH>(new Action<DIEMDANH>(this.attach_DIEMDANHs), new Action<DIEMDANH>(this.detach_DIEMDANHs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._KHOI = default(EntityRef<KHOI>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int")]
		public System.Nullable<int> SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._KHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int")]
		public System.Nullable<int> MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_CTPHIEUDK", Storage="_CTPHIEUDKs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<CTPHIEUDK> CTPHIEUDKs
		{
			get
			{
				return this._CTPHIEUDKs;
			}
			set
			{
				this._CTPHIEUDKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_DIEMDANH", Storage="_DIEMDANHs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<DIEMDANH> DIEMDANHs
		{
			get
			{
				return this._DIEMDANHs;
			}
			set
			{
				this._DIEMDANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_PHANCONGs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOI_LOP", Storage="_KHOI", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public KHOI KHOI
		{
			get
			{
				return this._KHOI.Entity;
			}
			set
			{
				KHOI previousValue = this._KHOI.Entity;
				if (((previousValue != value) 
							|| (this._KHOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOI.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOI.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHOI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOP", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUDKs(CTPHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_CTPHIEUDKs(CTPHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMH;
		
		private string _TenMH;
		
		private EntitySet<GIAOVIEN> _GIAOVIENs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public MONHOC()
		{
			this._GIAOVIENs = new EntitySet<GIAOVIEN>(new Action<GIAOVIEN>(this.attach_GIAOVIENs), new Action<GIAOVIEN>(this.detach_GIAOVIENs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_GIAOVIENs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this._GIAOVIENs;
			}
			set
			{
				this._GIAOVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOP", Storage="_LOPs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _TenNV;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _ChucVu;
		
		private System.Nullable<int> _MaTK;
		
		private EntitySet<BIENLAI> _BIENLAIs;
		
		private EntitySet<PHIEUDK> _PHIEUDKs;
		
		private EntitySet<PHIEULUONG> _PHIEULUONGs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnMaTKChanging(System.Nullable<int> value);
    partial void OnMaTKChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._BIENLAIs = new EntitySet<BIENLAI>(new Action<BIENLAI>(this.attach_BIENLAIs), new Action<BIENLAI>(this.detach_BIENLAIs));
			this._PHIEUDKs = new EntitySet<PHIEUDK>(new Action<PHIEUDK>(this.attach_PHIEUDKs), new Action<PHIEUDK>(this.detach_PHIEUDKs));
			this._PHIEULUONGs = new EntitySet<PHIEULUONG>(new Action<PHIEULUONG>(this.attach_PHIEULUONGs), new Action<PHIEULUONG>(this.detach_PHIEULUONGs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(MAX)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int")]
		public System.Nullable<int> MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_BIENLAI", Storage="_BIENLAIs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<BIENLAI> BIENLAIs
		{
			get
			{
				return this._BIENLAIs;
			}
			set
			{
				this._BIENLAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDK", Storage="_PHIEUDKs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHIEUDK> PHIEUDKs
		{
			get
			{
				return this._PHIEUDKs;
			}
			set
			{
				this._PHIEUDKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEULUONG", Storage="_PHIEULUONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHIEULUONG> PHIEULUONGs
		{
			get
			{
				return this._PHIEULUONGs;
			}
			set
			{
				this._PHIEULUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUDKs(PHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUDKs(PHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEULUONGs(PHIEULUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEULUONGs(PHIEULUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPC;
		
		private System.Nullable<int> _MaLop;
		
		private System.Nullable<int> _MaTKB;
		
		private System.Nullable<int> _MaGV;
		
		private EntitySet<CHAMCONG> _CHAMCONGs;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<THOIKHOABIEU> _THOIKHOABIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPCChanging(int value);
    partial void OnMaPCChanged();
    partial void OnMaLopChanging(System.Nullable<int> value);
    partial void OnMaLopChanged();
    partial void OnMaTKBChanging(System.Nullable<int> value);
    partial void OnMaTKBChanged();
    partial void OnMaGVChanging(System.Nullable<int> value);
    partial void OnMaGVChanged();
    #endregion
		
		public PHANCONG()
		{
			this._CHAMCONGs = new EntitySet<CHAMCONG>(new Action<CHAMCONG>(this.attach_CHAMCONGs), new Action<CHAMCONG>(this.detach_CHAMCONGs));
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOP = default(EntityRef<LOP>);
			this._THOIKHOABIEU = default(EntityRef<THOIKHOABIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPC
		{
			get
			{
				return this._MaPC;
			}
			set
			{
				if ((this._MaPC != value))
				{
					this.OnMaPCChanging(value);
					this.SendPropertyChanging();
					this._MaPC = value;
					this.SendPropertyChanged("MaPC");
					this.OnMaPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int")]
		public System.Nullable<int> MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTKB", DbType="Int")]
		public System.Nullable<int> MaTKB
		{
			get
			{
				return this._MaTKB;
			}
			set
			{
				if ((this._MaTKB != value))
				{
					if (this._THOIKHOABIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKBChanging(value);
					this.SendPropertyChanging();
					this._MaTKB = value;
					this.SendPropertyChanged("MaTKB");
					this.OnMaTKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]
		public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANCONG_CHAMCONG", Storage="_CHAMCONGs", ThisKey="MaPC", OtherKey="MaPC")]
		public EntitySet<CHAMCONG> CHAMCONGs
		{
			get
			{
				return this._CHAMCONGs;
			}
			set
			{
				this._CHAMCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_GIAOVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_LOP", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THOIKHOABIEU_PHANCONG", Storage="_THOIKHOABIEU", ThisKey="MaTKB", OtherKey="MATKB", IsForeignKey=true)]
		public THOIKHOABIEU THOIKHOABIEU
		{
			get
			{
				return this._THOIKHOABIEU.Entity;
			}
			set
			{
				THOIKHOABIEU previousValue = this._THOIKHOABIEU.Entity;
				if (((previousValue != value) 
							|| (this._THOIKHOABIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THOIKHOABIEU.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._THOIKHOABIEU.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaTKB = value.MATKB;
					}
					else
					{
						this._MaTKB = default(Nullable<int>);
					}
					this.SendPropertyChanged("THOIKHOABIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.PHANCONG = this;
		}
		
		private void detach_CHAMCONGs(CHAMCONG entity)
		{
			this.SendPropertyChanging();
			entity.PHANCONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDK")]
	public partial class PHIEUDK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuDK;
		
		private System.Nullable<int> _TongSoMon;
		
		private System.Nullable<System.DateTime> _NgayDK;
		
		private System.Nullable<int> _MaHV;
		
		private System.Nullable<int> _MaNV;
		
		private EntitySet<CTPHIEUDK> _CTPHIEUDKs;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuDKChanging(int value);
    partial void OnMaPhieuDKChanged();
    partial void OnTongSoMonChanging(System.Nullable<int> value);
    partial void OnTongSoMonChanged();
    partial void OnNgayDKChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDKChanged();
    partial void OnMaHVChanging(System.Nullable<int> value);
    partial void OnMaHVChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    #endregion
		
		public PHIEUDK()
		{
			this._CTPHIEUDKs = new EntitySet<CTPHIEUDK>(new Action<CTPHIEUDK>(this.attach_CTPHIEUDKs), new Action<CTPHIEUDK>(this.detach_CTPHIEUDKs));
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuDK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuDK
		{
			get
			{
				return this._MaPhieuDK;
			}
			set
			{
				if ((this._MaPhieuDK != value))
				{
					this.OnMaPhieuDKChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuDK = value;
					this.SendPropertyChanged("MaPhieuDK");
					this.OnMaPhieuDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoMon", DbType="Int")]
		public System.Nullable<int> TongSoMon
		{
			get
			{
				return this._TongSoMon;
			}
			set
			{
				if ((this._TongSoMon != value))
				{
					this.OnTongSoMonChanging(value);
					this.SendPropertyChanging();
					this._TongSoMon = value;
					this.SendPropertyChanged("TongSoMon");
					this.OnTongSoMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDK", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDK
		{
			get
			{
				return this._NgayDK;
			}
			set
			{
				if ((this._NgayDK != value))
				{
					this.OnNgayDKChanging(value);
					this.SendPropertyChanging();
					this._NgayDK = value;
					this.SendPropertyChanged("NgayDK");
					this.OnNgayDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHV", DbType="Int")]
		public System.Nullable<int> MaHV
		{
			get
			{
				return this._MaHV;
			}
			set
			{
				if ((this._MaHV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHVChanging(value);
					this.SendPropertyChanging();
					this._MaHV = value;
					this.SendPropertyChanged("MaHV");
					this.OnMaHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDK_CTPHIEUDK", Storage="_CTPHIEUDKs", ThisKey="MaPhieuDK", OtherKey="MaPhieuDK")]
		public EntitySet<CTPHIEUDK> CTPHIEUDKs
		{
			get
			{
				return this._CTPHIEUDKs;
			}
			set
			{
				this._CTPHIEUDKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_PHIEUDK", Storage="_HOCVIEN", ThisKey="MaHV", OtherKey="MaHV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.PHIEUDKs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDKs.Add(this);
						this._MaHV = value.MaHV;
					}
					else
					{
						this._MaHV = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDK", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUDKs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDKs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUDKs(CTPHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDK = this;
		}
		
		private void detach_CTPHIEUDKs(CTPHIEUDK entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEULUONG")]
	public partial class PHIEULUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPL;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<int> _MaGV;
		
		private System.Nullable<int> _MaNV;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPLChanging(int value);
    partial void OnMaPLChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnMaGVChanging(System.Nullable<int> value);
    partial void OnMaGVChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    #endregion
		
		public PHIEULUONG()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPL
		{
			get
			{
				return this._MaPL;
			}
			set
			{
				if ((this._MaPL != value))
				{
					this.OnMaPLChanging(value);
					this.SendPropertyChanging();
					this._MaPL = value;
					this.SendPropertyChanged("MaPL");
					this.OnMaPLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]
		public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHIEULUONG", Storage="_GIAOVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHIEULUONGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEULUONGs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEULUONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEULUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEULUONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGHOC")]
	public partial class PHONGHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPH;
		
		private string _TenPH;
		
		private System.Nullable<int> _SucChua;
		
		private EntitySet<THOIKHOABIEU> _THOIKHOABIEUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(int value);
    partial void OnMaPHChanged();
    partial void OnTenPHChanging(string value);
    partial void OnTenPHChanged();
    partial void OnSucChuaChanging(System.Nullable<int> value);
    partial void OnSucChuaChanged();
    #endregion
		
		public PHONGHOC()
		{
			this._THOIKHOABIEUs = new EntitySet<THOIKHOABIEU>(new Action<THOIKHOABIEU>(this.attach_THOIKHOABIEUs), new Action<THOIKHOABIEU>(this.detach_THOIKHOABIEUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPH", DbType="NVarChar(50)")]
		public string TenPH
		{
			get
			{
				return this._TenPH;
			}
			set
			{
				if ((this._TenPH != value))
				{
					this.OnTenPHChanging(value);
					this.SendPropertyChanging();
					this._TenPH = value;
					this.SendPropertyChanged("TenPH");
					this.OnTenPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SucChua", DbType="Int")]
		public System.Nullable<int> SucChua
		{
			get
			{
				return this._SucChua;
			}
			set
			{
				if ((this._SucChua != value))
				{
					this.OnSucChuaChanging(value);
					this.SendPropertyChanging();
					this._SucChua = value;
					this.SendPropertyChanged("SucChua");
					this.OnSucChuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_THOIKHOABIEU", Storage="_THOIKHOABIEUs", ThisKey="MaPH", OtherKey="MaPH")]
		public EntitySet<THOIKHOABIEU> THOIKHOABIEUs
		{
			get
			{
				return this._THOIKHOABIEUs;
			}
			set
			{
				this._THOIKHOABIEUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = this;
		}
		
		private void detach_THOIKHOABIEUs(THOIKHOABIEU entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private string _Quyen;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NVarChar(50)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
}
#pragma warning restore 1591
